[{"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/index.js":"1","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/App.js":"2","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/ProtectedRoute.js":"3","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/ImagePopup.js":"4","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Login.js":"5","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js":"6","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Footer.js":"7","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Main.js":"8","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Header.js":"9","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/EditProfilePopup.js":"10","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Register.js":"11","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/InfoTooltip.js":"12","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/AddPlacePopup.js":"13","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/utils/api.js":"14","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/utils/auth.js":"15","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js":"16","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/PopupWithForm.js":"17","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Card.js":"18","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/reportWebVitals.js":"19"},{"size":605,"mtime":1630182545454,"results":"20","hashOfConfig":"21"},{"size":7623,"mtime":1630319673095,"results":"22","hashOfConfig":"21"},{"size":294,"mtime":1629844222046,"results":"23","hashOfConfig":"21"},{"size":638,"mtime":1627776216650,"results":"24","hashOfConfig":"21"},{"size":1332,"mtime":1630001330085,"results":"25","hashOfConfig":"21"},{"size":1074,"mtime":1628988405920,"results":"26","hashOfConfig":"21"},{"size":222,"mtime":1627776214057,"results":"27","hashOfConfig":"21"},{"size":2062,"mtime":1628991454610,"results":"28","hashOfConfig":"21"},{"size":1116,"mtime":1630188503254,"results":"29","hashOfConfig":"21"},{"size":2782,"mtime":1630274795071,"results":"30","hashOfConfig":"21"},{"size":1616,"mtime":1630186944089,"results":"31","hashOfConfig":"21"},{"size":1145,"mtime":1630275557007,"results":"32","hashOfConfig":"21"},{"size":1474,"mtime":1628992241923,"results":"33","hashOfConfig":"21"},{"size":2436,"mtime":1628989215341,"results":"34","hashOfConfig":"21"},{"size":1006,"mtime":1630192184034,"results":"35","hashOfConfig":"21"},{"size":124,"mtime":1628977948004,"results":"36","hashOfConfig":"21"},{"size":869,"mtime":1630273683184,"results":"37","hashOfConfig":"21"},{"size":1735,"mtime":1628982681191,"results":"38","hashOfConfig":"21"},{"size":362,"mtime":1627756291882,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"s1csqm",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/index.js",[],["81","82"],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/App.js",["83"],"import React from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport ProtectedRoute from './ProtectedRoute';\nimport api from \"../utils/api\";\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport InfoTooltip from './InfoTooltip';\nimport AddPlacePopup from './AddPlacePopup';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport * as auth from \"../utils/auth\";\n\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: ''\n  });\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const history = useHistory();\n\n  const [isSuccess, setIsSuccess] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n\n    api.getInitialData() \n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false))\n  }, []);\n\n  //Хук для проверки токена при каждом монтировании компонента App\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    //проверим существует ли токен в хранилище браузера localStorage\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          setIsLoggedIn(true);\n          setEmail(res.data.email);\n          history.push(\"/\");\n        })\n        .catch((err) => {\n          if (err.status === 401) {\n            console.log(\"401 — Токен не передан или передан не в том формате\");\n          }\n          console.log(\"401 — Переданный токен некорректен\");\n        });\n    }\n  }, [history]);\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  const handleUpdateUser = (user) => {\n    api.setUserInfo(user)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleUpdateAvatar = (user) => {\n    api.setUserAvatar(user)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddPlace = (place) => {\n    api.postCard(place)\n      .then((newCard) => {\n        setCards((state) => [newCard, ...state]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleRegisterSubmit(email, password) {\n    auth\n      .register(email, password)\n      .then((res) => {\n        setIsSuccess(true);\n        history.push(\"/sign-in\");\n      })\n      .catch((err) => {\n        if (err.status === 400) {\n          console.log(\"400 - некорректно заполнено одно из полей\");\n        }\n        setIsSuccess(false);\n      })\n      .finally(() => {\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function handleLoginSubmit(email, password) {\n    auth\n      .login(email, password)\n      .then((res) => {\n        localStorage.setItem(\"jwt\", res.token);\n        setIsLoggedIn(true);\n        setEmail(email);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        if (err.status === 400) {\n          console.log(\"400 - не передано одно из полей\");\n        } else if (err.status === 401) {\n          console.log(\"401 - пользователь с email не найден\");\n        }\n      });\n  }\n\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\");\n    setIsLoggedIn(false);\n    history.push(\"/sign-in\");\n  }\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleInfoTooltipClick = () => {\n    setIsInfoTooltipOpen(true);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__content\">\n        <Header email={email} onSignOut={handleSignOut} />\n        <Switch>\n          <ProtectedRoute\n            exact\n            path=\"/\"\n            cards={cards}\n            isLoggedIn={isLoggedIn}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onInfoTooltip={handleInfoTooltipClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            component={Main}\n          />\n          \n          <Route path=\"/sign-in\">\n            <Login onLogin={handleLoginSubmit} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register onRegister={handleRegisterSubmit} />\n          </Route>\n          <Route>\n            {isLoggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n          </Route>*/\n        </Switch>\n\n        {isLoggedIn && <Footer />}\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n          submitText=\"Да\"\n        />\n\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          isSuccess={isSuccess}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n\n  );\n}\n\nexport default App;\n","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/ProtectedRoute.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/ImagePopup.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Login.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Footer.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Main.js",["84","85","86"],"import { useEffect, useState, useContext } from \"react\";\nimport api from \"../utils/api\";\nimport Card from \"./Card\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete }) {\n    const currentUser = useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar-container\">\n                    <div\n                        className=\"profile__avatar\"\n                        style={{ backgroundImage: `url(${currentUser.avatar})` }}\n                    />\n                    <button\n                        type=\"button\"\n                        className=\"profile__avatar-edit-button\"\n                        onClick={onEditAvatar}\n                    />\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__title-wrapper\">\n                        <h1 className=\"profile__title\">{currentUser.name}</h1>\n                        <button\n                            type=\"button\"\n                            className=\"profile__edit-button\"\n                            onClick={onEditProfile}\n                        />\n                    </div>\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\n                </div>\n                <button\n                    type=\"button\"\n                    className=\"profile__add-button\"\n                    onClick={onAddPlace}\n                />\n            </section>\n\n            <section className=\"cards\">\n                {cards.map(card => (\n                    <Card\n                        key={card._id}\n                        data={card}\n                        onClick={onCardClick}\n                        onCardLike={onCardLike}\n                        onCardDelete={onCardDelete}\n                    />\n                ))}\n            </section>\n        </main>\n    );\n\n}\n\nexport default Main;\n","/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Header.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/EditProfilePopup.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Register.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/InfoTooltip.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/AddPlacePopup.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/utils/api.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/utils/auth.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/PopupWithForm.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/Card.js",[],"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/reportWebVitals.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":36,"column":10,"nodeType":"93","messageId":"94","endLine":36,"endColumn":19},{"ruleId":"91","severity":1,"message":"95","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":19},{"ruleId":"91","severity":1,"message":"96","line":1,"column":21,"nodeType":"93","messageId":"94","endLine":1,"endColumn":29},{"ruleId":"91","severity":1,"message":"97","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":11},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'api' is defined but never used.","no-global-assign","no-unsafe-negation"]