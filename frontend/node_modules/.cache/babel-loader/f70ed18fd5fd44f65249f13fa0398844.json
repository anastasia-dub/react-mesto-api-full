{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport ProtectedRoute from './ProtectedRoute';\nimport api from \"../utils/api\";\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport InfoTooltip from './InfoTooltip';\nimport AddPlacePopup from './AddPlacePopup';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport * as auth from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: ''\n  });\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const history = useHistory();\n  const [isSuccess, setIsSuccess] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  React.useEffect(() => {\n    setIsLoading(true);\n    api.getInitialData().then(_ref => {\n      let [user, cards] = _ref;\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(err => console.log(err)).finally(() => setIsLoading(false));\n  }, []); //Хук для проверки токена при каждом монтировании компонента App\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\"); //проверим существует ли токен в хранилище браузера localStorage\n\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        setIsLoggedIn(true);\n        setEmail(res.data.email);\n        history.push(\"/\");\n      }).catch(err => {\n        if (err.status === 401) {\n          console.log(\"401 — Токен не передан или передан не в том формате\");\n        }\n\n        console.log(\"401 — Переданный токен некорректен\");\n      });\n    }\n  }, [history]);\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const handleUpdateUser = user => {\n    api.setUserInfo(user).then(updatedUser => {\n      setCurrentUser(updatedUser);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleUpdateAvatar = user => {\n    api.setUserAvatar(user).then(updatedUser => {\n      setCurrentUser(updatedUser);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleAddPlace = place => {\n    api.postCard(place).then(newCard => {\n      setCards(state => [newCard, ...state]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleRegisterSubmit(email, password) {\n    auth.register(email, password).then(res => {\n      setIsSuccess(true);\n      history.push(\"/sign-in\");\n    }).catch(err => {\n      if (err.status === 400) {\n        console.log(\"400 - некорректно заполнено одно из полей\");\n      }\n\n      setIsSuccess(false);\n    }).finally(() => {\n      setIsInfoTooltipOpen(true);\n    });\n  }\n\n  function handleLoginSubmit(email, password) {\n    auth.login(email, password).then(res => {\n      localStorage.setItem(\"jwt\", res.token);\n      setIsLoggedIn(true);\n      setEmail(email);\n      history.push(\"/\");\n    }).catch(err => {\n      if (err.status === 400) {\n        console.log(\"400 - не передано одно из полей\");\n      } else if (err.status === 401) {\n        console.log(\"401 - пользователь с email не найден\");\n      }\n    });\n  }\n\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\");\n    setIsLoggedIn(false);\n    history.push(\"/sign-in\");\n  }\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleInfoTooltipClick = () => {\n    setIsInfoTooltipOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        onSignOut: handleSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          cards: cards,\n          isLoggedIn: isLoggedIn,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onInfoTooltip: handleInfoTooltipClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          component: Main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLoginSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegisterSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), \"*/\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups,\n        submitText: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups,\n        isSuccess: isSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MUMWWVxDs6MXm2RljGaCgjZOmnA=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anastasia/workplace/react-mesto-api-full/frontend/src/components/App.js"],"names":["React","Route","Switch","Redirect","useHistory","ProtectedRoute","api","Header","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","InfoTooltip","AddPlacePopup","CurrentUserContext","Register","Login","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","name","about","cards","setCards","isLoggedIn","setIsLoggedIn","email","setEmail","history","isSuccess","setIsSuccess","isLoading","setIsLoading","useEffect","getInitialData","then","user","catch","err","console","log","finally","jwt","localStorage","getItem","checkToken","res","data","push","status","closeAllPopups","handleCardClick","card","handleUpdateUser","setUserInfo","updatedUser","handleUpdateAvatar","setUserAvatar","handleAddPlace","place","postCard","newCard","state","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","map","c","handleCardDelete","deleteCard","filter","handleRegisterSubmit","password","register","handleLoginSubmit","login","setItem","token","handleSignOut","removeItem","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleInfoTooltipClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport ProtectedRoute from './ProtectedRoute';\nimport api from \"../utils/api\";\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport InfoTooltip from './InfoTooltip';\nimport AddPlacePopup from './AddPlacePopup';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport * as auth from \"../utils/auth\";\n\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: ''\n  });\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const history = useHistory();\n\n  const [isSuccess, setIsSuccess] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n\n    api.getInitialData() \n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false))\n  }, []);\n\n  //Хук для проверки токена при каждом монтировании компонента App\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    //проверим существует ли токен в хранилище браузера localStorage\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          setIsLoggedIn(true);\n          setEmail(res.data.email);\n          history.push(\"/\");\n        })\n        .catch((err) => {\n          if (err.status === 401) {\n            console.log(\"401 — Токен не передан или передан не в том формате\");\n          }\n          console.log(\"401 — Переданный токен некорректен\");\n        });\n    }\n  }, [history]);\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  const handleUpdateUser = (user) => {\n    api.setUserInfo(user)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleUpdateAvatar = (user) => {\n    api.setUserAvatar(user)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddPlace = (place) => {\n    api.postCard(place)\n      .then((newCard) => {\n        setCards((state) => [newCard, ...state]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleRegisterSubmit(email, password) {\n    auth\n      .register(email, password)\n      .then((res) => {\n        setIsSuccess(true);\n        history.push(\"/sign-in\");\n      })\n      .catch((err) => {\n        if (err.status === 400) {\n          console.log(\"400 - некорректно заполнено одно из полей\");\n        }\n        setIsSuccess(false);\n      })\n      .finally(() => {\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function handleLoginSubmit(email, password) {\n    auth\n      .login(email, password)\n      .then((res) => {\n        localStorage.setItem(\"jwt\", res.token);\n        setIsLoggedIn(true);\n        setEmail(email);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        if (err.status === 400) {\n          console.log(\"400 - не передано одно из полей\");\n        } else if (err.status === 401) {\n          console.log(\"401 - пользователь с email не найден\");\n        }\n      });\n  }\n\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\");\n    setIsLoggedIn(false);\n    history.push(\"/sign-in\");\n  }\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleInfoTooltipClick = () => {\n    setIsInfoTooltipOpen(true);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__content\">\n        <Header email={email} onSignOut={handleSignOut} />\n        <Switch>\n          <ProtectedRoute\n            exact\n            path=\"/\"\n            cards={cards}\n            isLoggedIn={isLoggedIn}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onInfoTooltip={handleInfoTooltipClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            component={Main}\n          />\n          \n          <Route path=\"/sign-in\">\n            <Login onLogin={handleLoginSubmit} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register onRegister={handleRegisterSubmit} />\n          </Route>\n          <Route>\n            {isLoggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n          </Route>*/\n        </Switch>\n\n        {isLoggedIn && <Footer />}\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n          submitText=\"Да\"\n        />\n\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          isSuccess={isSuccess}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}