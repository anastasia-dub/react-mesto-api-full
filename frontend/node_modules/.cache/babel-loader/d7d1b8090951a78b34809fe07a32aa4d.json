{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _handleOriginalResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleOriginalResponse);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleOriginalResponse);\n  }\n\n  setLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._handleOriginalResponse);\n  }\n\n  changeLikeCardStatus(id, shouldSetLike) {\n    return shouldSetLike ? this.setLike(id) : this.deleteLike(id);\n  }\n\n  deleteCard(data) {\n    return fetch(`${this._url}/cards/${data._id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleOriginalResponse);\n  }\n\n  postCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleOriginalResponse);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._handleOriginalResponse);\n  }\n\n  getInitialData() {\n    return Promise.all([this.getUserInfo(), this.getCardList()]);\n  }\n\n  getCardList() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleOriginalResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleOriginalResponse);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n  headers: {\n    Authorization: '278fac41-4fca-42d8-b991-ed853233cc11',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/anastasia/workplace/react-mesto-api-full/frontend/src/utils/api.js"],"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_handleOriginalResponse","res","ok","Promise","reject","status","json","setUserAvatar","data","fetch","method","body","JSON","stringify","avatar","then","deleteLike","id","setLike","changeLikeCardStatus","shouldSetLike","deleteCard","_id","postCard","name","link","setUserInfo","about","getInitialData","all","getUserInfo","getCardList","api","Authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n      this._url = options.baseUrl;\n      this._headers = options.headers;\n    }\n  \n    _handleOriginalResponse(res) {\n      if (!res.ok) {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n      return res.json();\n    }\n  \n    setUserAvatar(data) {\n      return fetch(`${this._url}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: data.avatar\n        })\n      }).then(this._handleOriginalResponse)\n    }\n  \n    deleteLike(id) {\n      return fetch(`${this._url}/cards/likes/${id}`, {\n        method: 'DELETE',\n        headers: this._headers,\n      }).then(this._handleOriginalResponse)\n    }\n  \n    setLike(id) {\n      return fetch(`${this._url}/cards/likes/${id}`, {\n        method: 'PUT',\n        headers: this._headers,\n      }).then(this._handleOriginalResponse)\n    }\n\n    changeLikeCardStatus(id, shouldSetLike) {\n      return shouldSetLike ? this.setLike(id) : this.deleteLike(id)\n    }\n  \n    deleteCard(data) {\n      return fetch(`${this._url}/cards/${data._id}`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._handleOriginalResponse)\n    }\n  \n    postCard(data) {\n      return fetch(`${this._url}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          link: data.link\n        })\n      }).then(this._handleOriginalResponse)\n    }\n  \n    setUserInfo(data) {\n      return fetch(`${this._url}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          about: data.about\n        })\n      }).then(this._handleOriginalResponse)\n    }\n  \n    getInitialData() {\n      return Promise.all([this.getUserInfo(), this.getCardList()]);\n    }\n  \n    getCardList() {\n      return fetch(`${this._url}/cards`, {\n        method: 'GET',\n        headers: this._headers\n      }).then(this._handleOriginalResponse)\n    }\n  \n    getUserInfo() {\n      return fetch(`${this._url}/users/me`, {\n        method: 'GET',\n        headers: this._headers\n      }).then(this._handleOriginalResponse)\n    }\n  }\n\n  const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n    headers: {\n      Authorization: '278fac41-4fca-42d8-b991-ed853233cc11',\n      'Content-Type': 'application/json'\n    }\n  });\n\nexport default api;"]},"metadata":{},"sourceType":"module"}